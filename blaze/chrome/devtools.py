import subprocess
import tempfile

from blaze.config import Config
from blaze.chrome.config import get_chrome_command, get_chrome_flags
from blaze.chrome.har import convert_json_to_har

REMOTE_DEBUGGING_PORT = 9301

def capture_har(url: str, config: Config):
  """
  capture_har spawns a headless chrome instance and connects to its remote debugger
  in order to extract the HAR file generated by loading the given URL.
  """
  with tempfile.TemporaryDirectory(prefix='blaze_har_capture', dir='/tmp') as tmp_dir:
    # configure chrome
    rdp_flag = '--remote-debugging-port={}'.format(REMOTE_DEBUGGING_PORT)
    chrome_flags = get_chrome_flags(tmp_dir, extra_flags=[rdp_flag])
    chrome_cmd = get_chrome_command('', chrome_flags, config)

    # spawn the chrome process
    chrome_proc = subprocess.Popen(chrome_cmd, encoding='utf-8')

    # configure the HAR capturer
    har_capture_cmd = [
      config.chrome_har_capturer_bin,
      '-h', 'localhost',
      '-p', str(REMOTE_DEBUGGING_PORT),
      '-i',
      url
    ]

    # spawn the HAR capturer process
    try:
      har_capture_proc = subprocess.run(har_capture_cmd, stdout=subprocess.PIPE)
      har_capture_proc.check_returncode()
    finally:
      chrome_proc.terminate()
    return convert_json_to_har(har_capture_proc.stdout)
